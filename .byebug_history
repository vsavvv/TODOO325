c
post('authenticate', user: { name: "admin", password: "admin", utf8: "" }).body
c
post('authenticate', user: { name: "admin", password: "admin" }).body
post('authenticate', user: { name: "admin", password: "admin" }).responce
post('authenticate', user: { name: "admin", password: "admin" }).methods
 post 'authenticate', user: { name: "admin", password: "admin" }
c
@task.users.count
User.all.count
User.all.except(@task.users).count
User.all.except @task.users
c
User.find(self.fulfilled).name
User.find(self.fulfilled)
self.fulfilled
c
 user.tasks.where.not(id: 11).countc
 user.tasks.where.not(id: 11).count
 user.tasks.where.not(id: 12).count
 user.tasks.where.not(id: 12)
 user.tasks.where.not(12).count
 user.tasks.where.not(11).count
 user.tasks.where.not(11)
 user.tasks.except(Task.find(11))
 user.tasks.except(11)
 user.tasks.count
 user.tasks
c
params[:id]
 User.find_by(params[:id].to_i)
 User.find_by(params[:id])
params[:id]
c
params[:task][:user_ids]
params[:task]
params
c
 params
c
exception
next
{ controller: :users, action: :sign_in, status: :forbidden }
next
action_name
controller_name
 params[:controller]
 session[:authenticated]
c
 flash[:error]
c
@authenticated
 User.find_by user_params
user_params
next
c
User.last
 @authenticated
next
 User.find_by user_params
 user_params
c
session[:action_back]
session[:controller_back]
@authenticated
c
exception
step
up
next
args
step
c
exception
next
c
step
next
